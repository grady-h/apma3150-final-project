# single_index <- grepl("MDD, single", data$Diagnosis) + grepl("MDD, Single", data$Diagnosis)
# other_index <- !(recurrent_index + single_index)
#
# MDD_recurrent <- data[which(as.logical(recurrent_index)),]
# MDD_single <- data[which(as.logical(single_index)),]
# other <- data[which(other_index),]
# level 1
los_fit_l1 <- lm(LOS ~ GENDER + AGE + RACE.ETHNICITY, data=data)
summary(los_fit_l1)$adj.r.squared
# level 2
print("level 2")
los_fit_l2_A <- lm(LOS ~ GENDER + AGE , data=data)
summary(los_fit_l2_A)$adj.r.squared
los_fit_l2_B <- lm(LOS ~ GENDER + RACE.ETHNICITY, data=data)
summary(los_fit_l2_B)$adj.r.squared
los_fit_l2_C <- lm(LOS ~ AGE + RACE.ETHNICITY, data=data)
summary(los_fit_l2_C)$adj.r.squared
# no improvement at level 2
# winning model
summary(los_fit_l1)
# level 1
los_vs_demographicsA_init <- lm(LOS ~ GENDER + AGE + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_init)$adj.r.squared
# level 2
print("level 2")
los_vs_demographicsA_l2A <- lm(LOS ~ GENDER + AGE, data=data_A)
summary(los_vs_demographicsA_l2A)$adj.r.squared
los_vs_demographicsA_l2B <- lm(LOS ~ GENDER + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_l2B)$adj.r.squared
los_vs_demographicsA_l2C <- lm(LOS ~ AGE + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_l2C)$adj.r.squared
# no improvement at level 2 (it sucks)
# winning model
summary(los_vs_demographicsA_init)
# level 1
los_vs_med_init <- lm(LOS ~ A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+AA+AB+AC+AD, data=data)
summary(los_vs_med_init)
# level 1
los_vs_medA_init <- lm(LOS ~ A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+AA+AB+AC+AD, data=data_A)
summary(los_vs_medA_init)
# level 1
los_vs_treatment_init <- lm(LOS ~ Diagnosis + Assignment + Therapeutic.Guidances, data=data)
summary(los_vs_treatment_init)$adj.r.squared
# level 2
print("level 2")
los_vs_treatment_l2A <- lm(LOS ~ Diagnosis + Assignment, data=data)
summary(los_vs_treatment_l2A)$adj.r.squared
los_vs_treatment_l2B <- lm(LOS ~ Diagnosis +Therapeutic.Guidances, data=data)
summary(los_vs_treatment_l2B)$adj.r.squared
los_vs_treatment_l2C <- lm(LOS ~ Assignment + Therapeutic.Guidances, data=data)
summary(los_vs_treatment_l2C)$adj.r.squared
# level 3
print("level 3")
los_vs_treatment_l3A <- lm(LOS ~ Assignment, data=data)
summary(los_vs_treatment_l3A)$adj.r.squared
los_vs_treatment_l3B <- lm(LOS ~ Diagnosis, data=data)
summary(los_vs_treatment_l3B)$adj.r.squared
# winning model
summary(los_vs_treatment_l3B)
# level 1
los_vs_treatmentA_init <- lm(LOS ~ Assignment + Therapeutic.Guidances, data=data_A)
summary(los_vs_treatment_init)$adj.r.squared
# level2
print("level 2")
los_vs_treatmentA_l2A <- lm(LOS ~ Assignment, data=data_A)
summary(los_vs_treatment_l2A)$adj.r.squared
los_vs_treatmentA_l2B <- lm(LOS ~ Therapeutic.Guidances, data=data_A)
summary(los_vs_treatment_l2B)$adj.r.squared # winning model
summary(los_vs_treatment_l2B)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS)))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color="Diagnosis"))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
View(diagnoses_combined)
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_C,]
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
index <- data$Diagnosis==diagnosis_A + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_C
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
index <- data$Diagnosis==diagnosis_A + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_C
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
index <- data$Diagnosis==diagnosis_A + data$Diagnosis==diagnosis_B
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
index <- data$Diagnosis==diagnosis_A
diagnoses_combined <- data[index,]
sum(data_A$RAR)
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
index <- data$Diagnosis==diagnosis_A
index <- index + data$Diagnosis==diagnosis_B
diagnoses_combined <- data[index,]
sum(data_A$RAR)
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A || data$Diagnosis==diagnosis_B || data$Diagnosis==diagnosis_B || data$Diagnosis==diagnosis_C,]
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_B + data$Diagnosis==diagnosis_C,]
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[as.numeric(data$Diagnosis==diagnosis_A) + as.numeric(data$Diagnosis==diagnosis_B) + as.numeric(data$Diagnosis==diagnosis_B) + as.numeric(data$Diagnosis==diagnosis_C),]
sum(data_A$RAR)
View(diagnoses_combined)
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A | data$Diagnosis==diagnosis_B | data$Diagnosis==diagnosis_B | data$Diagnosis==diagnosis_C,]
sum(data_A$RAR)
View(diagnoses_combined)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS)))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color="Diagnosis"))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
library(tidyverse)
library(car)
library(data.table)
library(RColorBrewer)
library(gridExtra)
library(corrplot)
data <- read.csv("data/Dataset.csv")
medication_key <- read.csv("data/Medicationkey.csv")
# Lets begin by taking a look into the datasets.
head(data)
print(colnames(data))
head(medication_key)
print(colnames(medication_key))
data$GENDER <- as.factor(data$GENDER)
data$`RACE.ETHNICITY` <- as.factor(data$`RACE.ETHNICITY`)
data$Assignment <- as.factor(data$Assignment)
data$EMR <- as.factor(data$EMR)
data$`Therapeutic.Guidances` <- as.factor(data$`Therapeutic.Guidances`)
anova_model <- aov(LOS ~ Assignment + GENDER + `RACE.ETHNICITY`, data = data)
summary(anova_model)
# Boxplots
par(mfrow = c(1, 3))  # Set up the plotting area to have 1 row and 3 columns
# Boxplot for ASSIGNMENT
boxplot(LOS ~ Assignment, data = data, main = "LOS by ASSIGNMENT",
xlab = "ASSIGNMENT", ylab = "Length of Stay (LOS)", col = "lightblue")
# Boxplot for GENDER
boxplot(LOS ~ GENDER, data = data, main = "LOS by GENDER",
xlab = "GENDER", ylab = "Length of Stay (LOS)", col = "lightgreen")
# Boxplot for RACE.ETHNICITY
boxplot(LOS ~ RACE.ETHNICITY, data = data, main = "LOS by RACE.ETHNICITY",
xlab = "RACE.ETHNICITY", ylab = "Length of Stay (LOS)", col = "lightcoral")
data <- read.csv("data/Dataset.csv")
medication_key <- read.csv("data/Medicationkey.csv")
# convert categorical variables to factors
data$GENDER <- as.factor(data$GENDER)
levels(data$GENDER) <- c("Female", "Male")
data$RACE.ETHNICITY <- as.factor(data$RACE.ETHNICITY)
levels(data$RACE.ETHNICITY) <- c("Black", "Latino", "Other/Unspecified", "White")
diagnosis_factor <- as.factor(data$Diagnosis)
data$Diagnosis <- diagnosis_factor
# summary(diagnosis_factor)
# for (i in seq(1:length(levels(diagnosis_factor))-1)) {
#   diagnosis <- levels(diagnosis_factor)[i]
#   print(diagnosis)
#   diagnosis_index <- diagnosis_factor == diagnosis
#   if (sum(as.numeric(diagnosis_index)) < 5)
#     levels(diagnosis_factor)[i] <- "Other"
# }
data$MD <- as.factor(data$MD)
data$Assignment <- as.factor(data$Assignment)
data$EMR <- as.factor(data$EMR)
data$Therapeutic.Guidances <- as.factor(data$Therapeutic.Guidances)
# change medicines to indicator variables rather than total counts (yes/no did recieve this medicine during hospital stay)
for (i in seq(0:29)) {
data[i+10] <- as.numeric(data[i+10] > 0)
}
# gender_race <- table(data$GENDER, data$RACE.ETHNICITY)
# gender_race_prop <- prop.table(gender_race)
# dimnames(gender_race)[[1]] <- c("Male", "Female")
# dimnames(gender_race)[[2]] <- c("Black", "LatinX", "Other/Unspecified", "White")
#
# barplot(gender_race, legend.text=TRUE, main="Patient Demographics")
ggplot(data, aes(x=RACE.ETHNICITY, fill=GENDER))+
geom_bar(color="black")+
scale_fill_manual(values=c("#bd5564", "#5e94ad"))+
labs(x="Race", y="Number of Patients", title="Patient Demographics")
ggplot(data, aes(x=LOS))+
geom_histogram(color="black", fill="#5e94ad")+
labs(x="Length of Stay (days)", y="Frequency")
# ggplot(data, aes(x=LOS))+
#   geom_boxplot(fill="#5e94ad")
medicine_counts <- as.data.table(data[11:40])
medicine_counts <- apply(medicine_counts, 2, FUN=sum)
barplot(medicine_counts, col="#5e94ad")
ggplot(data, aes(x=Assignment, y=LOS))+
geom_boxplot(fill="#5e94ad")
los_by_diagnosis <- list()
i <- 1
for (diagnosis in levels(diagnosis_factor)) {
diagnosis_index <- diagnosis_factor == diagnosis
if (sum(diagnosis_index) < 5) next  # ignore diagnoses with only a small number of observations
los_by_diagnosis[[diagnosis]] <- data$LOS[diagnosis_index]
i <- i+1
}
los_by_diagnosis
boxplot(los_by_diagnosis)
ggplot(data, aes(x=Diagnosis, y=LOS))+
geom_boxplot()+
scale_x_discrete(labels=seq(1:32))
ggplot(data, aes(x=Diagnosis))+
geom_bar(color="black", fill="#5e94ad")+
scale_x_discrete(labels=seq(1:32))
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A | data$Diagnosis==diagnosis_B | data$Diagnosis==diagnosis_B | data$Diagnosis==diagnosis_C,]
sum(data_A$RAR)
df_list <- list(`Diagnosis 1`=data_A,`Diagnosis 2`=data_B, `Diagnosis 3`=data_C, `Diagnosis 4`=data_D)
df_combined <- bind_rows(df_list, .id= "Diagnosis")
ggplot(df_combined, mapping = aes(x = .data[["Diagnosis"]], y = .data[["LOS"]]))+
geom_boxplot(fill="#5e94ad")+
labs()
par(mfrow=c(2,2))
medicine_counts_A <- as.data.table(data_A[11:40])
medicine_counts_A <- apply(medicine_counts_A, 2, FUN=sum)
barplot(medicine_counts_A, col="#5e94ad", main="MDD, Recurrent, Severe Without (1)")
medicine_counts_B <- as.data.table(data_B[11:40])
medicine_counts_B <- apply(medicine_counts_B, 2, FUN=sum)
barplot(medicine_counts_B, col="#5e94ad", main="Depressive Disorder NOS (2)")
medicine_counts_C <- as.data.table(data_C[11:40])
medicine_counts_C <- apply(medicine_counts_C, 2, FUN=sum)
barplot(medicine_counts_C, col="#5e94ad", main="MDD, Recurrent, Unspecified (3)")
medicine_counts_D <- as.data.table(data_D[11:40])
medicine_counts_D <- apply(medicine_counts_D, 2, FUN=sum)
barplot(medicine_counts_D, col="#5e94ad", main="MDD, Single Episode, Severe With (4)")
# code to split data by MDD recurrent, MDD single, and other
# recurrent_index <- grepl("Major depressive disorder, recurrent", data$Diagnosis) + grepl("MDD, recurrent", data$Diagnosis) + grepl("MDD, Recurrent", data$Diagnosis)
# single_index <- grepl("MDD, single", data$Diagnosis) + grepl("MDD, Single", data$Diagnosis)
# other_index <- !(recurrent_index + single_index)
#
# MDD_recurrent <- data[which(as.logical(recurrent_index)),]
# MDD_single <- data[which(as.logical(single_index)),]
# other <- data[which(other_index),]
# level 1
los_fit_l1 <- lm(LOS ~ GENDER + AGE + RACE.ETHNICITY, data=data)
summary(los_fit_l1)$adj.r.squared
# level 2
print("level 2")
los_fit_l2_A <- lm(LOS ~ GENDER + AGE , data=data)
summary(los_fit_l2_A)$adj.r.squared
los_fit_l2_B <- lm(LOS ~ GENDER + RACE.ETHNICITY, data=data)
summary(los_fit_l2_B)$adj.r.squared
los_fit_l2_C <- lm(LOS ~ AGE + RACE.ETHNICITY, data=data)
summary(los_fit_l2_C)$adj.r.squared
# no improvement at level 2
# winning model
summary(los_fit_l1)
# level 1
los_vs_demographicsA_init <- lm(LOS ~ GENDER + AGE + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_init)$adj.r.squared
# level 2
print("level 2")
los_vs_demographicsA_l2A <- lm(LOS ~ GENDER + AGE, data=data_A)
summary(los_vs_demographicsA_l2A)$adj.r.squared
los_vs_demographicsA_l2B <- lm(LOS ~ GENDER + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_l2B)$adj.r.squared
los_vs_demographicsA_l2C <- lm(LOS ~ AGE + RACE.ETHNICITY, data=data_A)
summary(los_vs_demographicsA_l2C)$adj.r.squared
# no improvement at level 2 (it sucks)
# winning model
summary(los_vs_demographicsA_init)
# level 1
los_vs_med_init <- lm(LOS ~ A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+AA+AB+AC+AD, data=data)
summary(los_vs_med_init)
# level 1
los_vs_medA_init <- lm(LOS ~ A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+AA+AB+AC+AD, data=data_A)
summary(los_vs_medA_init)
# level 1
los_vs_treatment_init <- lm(LOS ~ Diagnosis + Assignment + Therapeutic.Guidances, data=data)
summary(los_vs_treatment_init)$adj.r.squared
# level 2
print("level 2")
los_vs_treatment_l2A <- lm(LOS ~ Diagnosis + Assignment, data=data)
summary(los_vs_treatment_l2A)$adj.r.squared
los_vs_treatment_l2B <- lm(LOS ~ Diagnosis +Therapeutic.Guidances, data=data)
summary(los_vs_treatment_l2B)$adj.r.squared
los_vs_treatment_l2C <- lm(LOS ~ Assignment + Therapeutic.Guidances, data=data)
summary(los_vs_treatment_l2C)$adj.r.squared
# level 3
print("level 3")
los_vs_treatment_l3A <- lm(LOS ~ Assignment, data=data)
summary(los_vs_treatment_l3A)$adj.r.squared
los_vs_treatment_l3B <- lm(LOS ~ Diagnosis, data=data)
summary(los_vs_treatment_l3B)$adj.r.squared
# winning model
summary(los_vs_treatment_l3B)
# level 1
los_vs_treatmentA_init <- lm(LOS ~ Assignment + Therapeutic.Guidances, data=data_A)
summary(los_vs_treatment_init)$adj.r.squared
# level2
print("level 2")
los_vs_treatmentA_l2A <- lm(LOS ~ Assignment, data=data_A)
summary(los_vs_treatment_l2A)$adj.r.squared
los_vs_treatmentA_l2B <- lm(LOS ~ Therapeutic.Guidances, data=data_A)
summary(los_vs_treatment_l2B)$adj.r.squared # winning model
summary(los_vs_treatment_l2B)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS)))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color="Diagnosis"))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS), color="Diagnosis"))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color="Diagnosis"))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS),))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lm <- lm(log(LOS) ~ AGE, data=data)
summary(los_age_lm)
ggplot(data, aes(x=AGE, y=log(LOS),))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
# get the top 4 most common diagnosis
diagnosis_A <- levels(diagnosis_factor)[21]
diagnosis_B <- levels(diagnosis_factor)[7]
diagnosis_C <- levels(diagnosis_factor)[22]
diagnosis_D <- levels(diagnosis_factor)[28]
diagnosis_A; diagnosis_B; diagnosis_C; diagnosis_D
data_A <- data[data$Diagnosis==diagnosis_A,]
data_B <- data[data$Diagnosis==diagnosis_B,]
data_C <- data[data$Diagnosis==diagnosis_C,]
data_D <- data[data$Diagnosis==diagnosis_D,]
diagnoses_combined <- data[data$Diagnosis==diagnosis_A | data$Diagnosis==diagnosis_B | data$Diagnosis==diagnosis_C | data$Diagnosis==diagnosis_D,]
sum(data_A$RAR)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lmA <- lm(log(LOS) ~ AGE, data=data_A)
summary(los_age_lmA)
los_age_lmB <- lm(log(LOS) ~ AGE, data=data_B)
summary(los_age_lmB)
los_age_lmC <- lm(log(LOS) ~ AGE, data=data_C)
summary(los_age_lmC)
los_age_lmD <- lm(log(LOS) ~ AGE, data=data_D)
summary(los_age_lmD)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lmA <- lm(log(LOS) ~ AGE, data=data_A)
summary(los_age_lmA)$coefficients
los_age_lmB <- lm(log(LOS) ~ AGE, data=data_B)
summary(los_age_lmB)
los_age_lmC <- lm(log(LOS) ~ AGE, data=data_C)
summary(los_age_lmC)
los_age_lmD <- lm(log(LOS) ~ AGE, data=data_D)
summary(los_age_lmD)
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lmA <- lm(log(LOS) ~ AGE, data=data_A)
summary(los_age_lmA)$coefficients
summary(los_age_lmA)$r.squared
los_age_lmB <- lm(log(LOS) ~ AGE, data=data_B)
summary(los_age_lmB)$coefficients
summary(los_age_lmB)$r.squared
los_age_lmC <- lm(log(LOS) ~ AGE, data=data_C)
summary(los_age_lmC)$coefficients
summary(los_age_lmC)$r.squared
los_age_lmD <- lm(log(LOS) ~ AGE, data=data_D)
summary(los_age_lmD)$coefficients
summary(los_age_lmD)$r.squared
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lmA <- lm(LOS ~ AGE, data=data_A)
summary(los_age_lmA)$coefficients
summary(los_age_lmA)$r.squared
los_age_lmB <- lm(log(LOS) ~ AGE, data=data_B)
summary(los_age_lmB)$coefficients
summary(los_age_lmB)$r.squared
los_age_lmC <- lm(log(LOS) ~ AGE, data=data_C)
summary(los_age_lmC)$coefficients
summary(los_age_lmC)$r.squared
los_age_lmD <- lm(log(LOS) ~ AGE, data=data_D)
summary(los_age_lmD)$coefficients
summary(los_age_lmD)$r.squared
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
los_age_lmA <- lm(log(LOS) ~ AGE, data=data_A)
summary(los_age_lmA)$coefficients
summary(los_age_lmA)$r.squared
los_age_lmB <- lm(log(LOS) ~ AGE, data=data_B)
summary(los_age_lmB)$coefficients
summary(los_age_lmB)$r.squared
los_age_lmC <- lm(log(LOS) ~ AGE, data=data_C)
summary(los_age_lmC)$coefficients
summary(los_age_lmC)$r.squared
los_age_lmD <- lm(log(LOS) ~ AGE, data=data_D)
summary(los_age_lmD)$coefficients
summary(los_age_lmD)$r.squared
ggplot(diagnoses_combined, aes(x=AGE, y=log(LOS), color=Diagnosis))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
